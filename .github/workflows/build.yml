name: 🏗️ Build

on:
  push:
    branches: [main, dev]
    paths:
      - 'libs/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'nx.json'
      - '.github/workflows/**'
  pull_request:
    branches: [main, dev]
    paths:
      - 'libs/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'nx.json'
      - '.github/workflows/**'
  workflow_call:
    outputs:
      build-success:
        description: Build success status
        value: ${{ jobs.build.outputs.success }}

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: 🏗️ Build & Test (libs/*)
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore(release): publish')"
    outputs:
      success: ${{ steps.mark.outputs.success }}

    steps:
      # ---------- checkout ----------
      - name: 📦 Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      # ---------- caches ----------
      - name: ⏳ Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: ⏳ Restore Nx cache
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-nx-

      # ---------- toolchain ----------
      - name: 📦 Setup Node.js 23
        uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: 📦 Setup pnpm v10
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false # ми самі робимо pnpm install

      - name: 🔍 Check pnpm
        run: pnpm -v

      # ---------- install ----------
      - name: 📦 Install deps
        run: pnpm install --frozen-lockfile

      # ---------- quality ----------
      - name: 🔍 Lint
        run: pnpm nx run-many -t lint -p libs/* --parallel=5

      # - name: 🧪 Test
      #   run: pnpm nx run-many -t test -p libs/* --parallel=5

      # ---------- build ----------
      - name: 🏗️ Build
        run: pnpm nx run-many -t build -p libs/* --parallel=3

      - name: 📊 Show build artifacts
        run: |
          echo "Built packages:"
          ls -R dist | head

      # ---------- status ----------
      - name: ✅ Mark success
        id: mark
        run: echo "success=true" >> "$GITHUB_OUTPUT"
