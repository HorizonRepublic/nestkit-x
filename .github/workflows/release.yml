name: üöÄ Release

on:
  workflow_run:
    workflows: ['üèóÔ∏è Build']
    types: [completed]
    branches: [main]

concurrency:
  group: release-main
  cancel-in-progress: false

jobs:
  release:
    name: üöÄ GitHub Release + npm publish
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'

    permissions:
      contents: write
      packages: write
      pull-requests: write
      issues: write
      id-token: write # provenance

    steps:
      # -------- checkout –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ SHA ----------
      - name: üì¶ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

      # -------- detect publish-commit --------------
      - name: üîç Commit message
        id: commit
        run: echo "msg=$(git log -1 --pretty=format:%s)" >> "$GITHUB_OUTPUT"

      - name: ‚è≠Ô∏è Skip release commit
        if: |
          contains(steps.commit.outputs.msg, 'chore(release): publish')
        run: exit 0

      # -------- toolchain --------------------------
      - uses: actions/setup-node@v4
        with: { node-version: 23 }

      - uses: pnpm/action-setup@v4
        with: { version: 10, run_install: false }

      - name: üì¶ Install deps
        run: pnpm install --frozen-lockfile

      # -------- version & changelog ---------------
      # (–≤—Å–µ—Ä–µ–¥–∏–Ω—ñ preVersionCommand –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–∞ –∑–±—ñ—Ä–∫–∞ libs/*)
      - name: üè∑Ô∏è Version & changelog
        run: pnpm nx release version --verbose
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # -------- publish ----------------------------
      - name: üì¶ Publish to npm
        run: pnpm nx release publish --verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
